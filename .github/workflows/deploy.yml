name: Deploy to AWS 
 
on: 
  push: 
    branches: 
      - main
 
jobs: 
  build-and-deploy: 
    runs-on: ubuntu-latest 
 
    steps: 
      - name: 🚀 Checkout Code 
        uses: actions/checkout@v3 
 
      - name: 🔨 Set up Docker Buildx 
        uses: docker/setup-buildx-action@v2 
 
      - name: 🔑 Login to Docker Hub 
        uses: docker/login-action@v2 
        with: 
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      
      # Add timestamp for versioning
      - name: Set build timestamp
        run: echo "BUILD_TIMESTAMP=$(date +%s)" >> $GITHUB_ENV
 
      - name: 🏗️ Build and Push Backend Image 
        run: | 
          docker build -t avngrstark62/clown-backend:latest -t avngrstark62/clown-backend:${{ env.BUILD_TIMESTAMP }} ./backend 
          docker push avngrstark62/clown-backend:latest
          docker push avngrstark62/clown-backend:${{ env.BUILD_TIMESTAMP }}
 
      - name: 🏗️ Build and Push Frontend Image 
        run: | 
          docker build -t avngrstark62/clown-frontend:latest -t avngrstark62/clown-frontend:${{ env.BUILD_TIMESTAMP }} ./frontend --no-cache
          docker push avngrstark62/clown-frontend:latest
          docker push avngrstark62/clown-frontend:${{ env.BUILD_TIMESTAMP }}
 
      - name: 🏗️ Build and Push AI Service Image 
        run: | 
          docker build -t avngrstark62/clown-ai-service:latest -t avngrstark62/clown-ai-service:${{ env.BUILD_TIMESTAMP }} ./ai-service 
          docker push avngrstark62/clown-ai-service:latest
          docker push avngrstark62/clown-ai-service:${{ env.BUILD_TIMESTAMP }}
 
      - name: 🔐 Setup SSH Key 
        uses: webfactory/ssh-agent@v0.9.0 
        with: 
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }} 
 
      - name: 🛠 Deploy to AWS 
        run: | 
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} <<EOF 
            cd /home/ubuntu/workspace/Clown/ 
            git pull origin main 
            echo "Stopping existing containers..."
            docker compose down
            echo "Pulling fresh images..."
            docker compose pull 
            echo "Starting new containers with build timestamp: ${{ env.BUILD_TIMESTAMP }}"
            docker compose up -d --no-deps --force-recreate frontend backend ai-service 
            echo "Checking running containers:"
            docker ps
            echo "Cleanup old Docker images"
            docker image prune -af 
            exit 
          EOF

# name: Deploy to AWS

# on:
#   push:
#     branches:
#       - main  # Runs when you push to the main branch

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: 🚀 Checkout Code
#         uses: actions/checkout@v3

#       - name: 🔨 Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: 🔑 Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: 🏗️ Build and Push Backend Image
#         run: |
#           docker build -t avngrstark62/clown-backend:latest ./backend
#           docker push avngrstark62/clown-backend:latest

#       - name: 🏗️ Build and Push Frontend Image
#         run: |
#           docker build -t avngrstark62/clown-frontend:latest ./frontend
#           docker push avngrstark62/clown-frontend:latest

#       - name: 🏗️ Build and Push AI Service Image
#         run: |
#           docker build -t avngrstark62/clown-ai-service:latest ./ai-service
#           docker push avngrstark62/clown-ai-service:latest

#       - name: 🔐 Setup SSH Key
#         uses: webfactory/ssh-agent@v0.9.0
#         with:
#           ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

#       - name: 🛠 Deploy to AWS
#         run: |
#           ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} <<EOF
#             cd /home/ubuntu/workspace/Clown/
#             git pull origin main
#             docker compose pull
#             docker compose up -d --no-deps frontend backend ai-service

#             # Cleanup old Docker images
#             docker image prune -af

#             exit
#           EOF

# name: Deploy to AWS

# on:
#   push:
#     branches:
#       - main  # Runs when you push to the main branch

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: 🚀 Checkout Code
#         uses: actions/checkout@v3

#       - name: 🔨 Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: 🔑 Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: 🏗️ Build and Push Backend Image
#         run: |
#           docker build -t avngrstark62/clown-backend:latest ./backend
#           docker push avngrstark62/clown-backend:latest

#       - name: 🏗️ Build and Push Frontend Image
#         run: |
#           docker build -t avngrstark62/clown-frontend:latest ./frontend
#           docker push avngrstark62/clown-frontend:latest

#       - name: 🔐 Setup SSH Key
#         uses: webfactory/ssh-agent@v0.9.0
#         with:
#           ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

#       - name: 🛠 Deploy to AWS
#         run: |
#           ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} <<EOF
#             cd /home/ubuntu/workspace/Clown/
#             git pull origin main
#             docker compose pull
#             docker compose up -d --no-deps frontend backend

#             # Cleanup old Docker images
#             docker image prune -af

#             exit
#           EOF

