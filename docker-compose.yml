version: '3.8'

services:
  frontend:
    image: avngrstark62/clown-frontend:latest  # Use your DockerHub frontend image
    ports:
      - "80:80"                  # Expose Nginx on port 80
      - "443:443"                 # Expose HTTPS port
    volumes:
      # - ./frontend/dist:/usr/share/nginx/html   # Mount built frontend files
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf   # Use your Nginx config
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount SSL certs as read-only
    depends_on:
      - backend                  # Ensure backend starts first
    restart: always

  backend:
    image: avngrstark62/clown-backend:latest
    environment:
      - NODE_ENV=production
    env_file:
      - ./backend/.env
    command: sh -c "npx prisma migrate deploy && npm start"
    depends_on:
      - ai-service                # Ensure AI service is available before backend starts
    restart: always

  ai-service:                     # New AI Caption Service
    image: avngrstark62/clown-ai-service:latest
    env_file:
      - ./ai-service/.env
    restart: always
    # ports:
    #   - "8001:8001"  # AI Service API exposed on port 8001

# version: '3.8'

# services:
#   frontend:
#     image: avngrstark62/clown-frontend:latest  # Use your DockerHub frontend image
#     ports:
#       - "80:80"                  # Expose Nginx on port 80
#       - "443:443"  # Expose HTTPS port
#     volumes:
#       - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf   # Use your Nginx config
#       - /etc/letsencrypt:/etc/letsencrypt:ro  # Mount SSL certs as read-only
#     depends_on:
#       - backend                  # Ensure backend starts first
#     restart: always

#   backend:
#     image: avngrstark62/clown-backend:latest
#     environment:
#       - NODE_ENV=production
#     env_file:
#       - ./backend/.env
#     command: sh -c "npx prisma migrate deploy && npm start"
#     depends_on:
#        - ai-service
#     restart: always